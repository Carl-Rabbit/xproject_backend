<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ooad.xproject.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.ooad.xproject.entity.Project">
    <id column="proj_id" jdbcType="INTEGER" property="projId" />
    <result column="sch_id" jdbcType="INTEGER" property="schId" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="proj_name" jdbcType="VARCHAR" property="projName" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="term" jdbcType="VARCHAR" property="term" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="topics" jdbcType="VARCHAR" property="topics" />
    <result column="proj_settings" jdbcType="VARCHAR" property="projSettings" />
    <result column="std_join" jdbcType="BIT" property="stdJoin" />
    <result column="tch_join" jdbcType="BIT" property="tchJoin" />
  </resultMap>
  <sql id="Base_Column_List">
    proj_id, sch_id, creator_id, create_time, proj_name, course_name, term, description,
    topics, proj_settings, std_join, tch_join
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from projects
    where proj_id = #{projId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from projects
    where proj_id = #{projId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ooad.xproject.entity.Project"
          useGeneratedKeys="true" keyColumn="proj_id" keyProperty="projId">
    insert into projects (sch_id, creator_id, create_time,
      proj_name, course_name, term,
      description, topics, proj_settings,
      std_join, tch_join)
    values (#{schId,jdbcType=INTEGER}, #{creatorId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{projName,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{term,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{topics,jdbcType=VARCHAR}, #{projSettings,jdbcType=VARCHAR},
      #{stdJoin,jdbcType=BIT}, #{tchJoin,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.ooad.xproject.entity.Project"
          useGeneratedKeys="true" keyColumn="proj_id" keyProperty="projId">
    insert into projects
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schId != null">
        sch_id,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="projName != null">
        proj_name,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="topics != null">
        topics,
      </if>
      <if test="projSettings != null">
        proj_settings,
      </if>
      <if test="stdJoin != null">
        std_join,
      </if>
      <if test="tchJoin != null">
        tch_join,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schId != null">
        #{schId,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projName != null">
        #{projName,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="topics != null">
        #{topics,jdbcType=VARCHAR},
      </if>
      <if test="projSettings != null">
        #{projSettings,jdbcType=VARCHAR},
      </if>
      <if test="stdJoin != null">
        #{stdJoin,jdbcType=BIT},
      </if>
      <if test="tchJoin != null">
        #{tchJoin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ooad.xproject.entity.Project">
    update projects
    <set>
      <if test="schId != null">
        sch_id = #{schId,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projName != null">
        proj_name = #{projName,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="topics != null">
        topics = #{topics,jdbcType=VARCHAR},
      </if>
      <if test="projSettings != null">
        proj_settings = #{projSettings,jdbcType=VARCHAR},
      </if>
      <if test="stdJoin != null">
        std_join = #{stdJoin,jdbcType=BIT},
      </if>
      <if test="tchJoin != null">
        tch_join = #{tchJoin,jdbcType=BIT},
      </if>
    </set>
    where proj_id = #{projId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ooad.xproject.entity.Project">
    update projects
    set sch_id = #{schId,jdbcType=INTEGER},
      creator_id = #{creatorId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      proj_name = #{projName,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      term = #{term,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      topics = #{topics,jdbcType=VARCHAR},
      proj_settings = #{projSettings,jdbcType=VARCHAR},
      std_join = #{stdJoin,jdbcType=BIT},
      tch_join = #{tchJoin,jdbcType=BIT}
    where proj_id = #{projId,jdbcType=INTEGER}
  </update>


    <update id="updateProjectRoleRT">
        update project_role_rt
        set group_mark = #{groupMark, jdbcType=VARCHAR}
        where proj_role_id = #{prrId, jdbcType=INTEGER}
    </update>

    <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from projects
    </select>
    <select id="selectByCreatorId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from projects
        where creator_id = #{tchId,jdbcType=INTEGER}
    </select>
    <select id="selectByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select p.*
        from projects p
                 join project_role_rt prr on p.proj_id = prr.proj_id
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <select id="selectBySchId" resultType="com.ooad.xproject.entity.Project">
        select p.*
        from projects as p
        where sch_id = #{schId}
    </select>
    <select id="selectRecordUnitByProjId" resultType="com.ooad.xproject.bo.RecordUnitBO">
        select rcd.rcd_name, s.std_no, s.std_name, content grade, rcd.type, ri.comments
        from records rcd
                 join project_role_rt prr on rcd.proj_id = prr.proj_id
                 join students s on prr.role_id = s.role_id
                 left join record_insts ri on rcd.rcd_id = ri.rcd_id and ri.role_id = s.role_id
        where rcd.proj_id = #{pid};
    </select>
    <select id="selectByProjAndRole" resultType="java.lang.Integer">
        select proj_role_id
        from project_role_rt
        where proj_id = #{projId}
          and role_id = #{roleId};
    </select>
    <select id="selectExistByRoleIdAndProjId" resultType="java.lang.Boolean">
        select count(*) = 1 as exist
        from project_role_rt
        where role_id = #{roleId} and proj_id = #{projId}
    </select>
    <insert id="joinProject">
        insert into project_role_rt (proj_id, role_id, group_mark)
        values (#{projId}, #{roleId}, #{groupMark});
    </insert>
    <insert id="insertProjectRoleRT">
        insert into project_role_rt (proj_id, role_id, group_mark)
        values (#{projId, jdbcType=INTEGER}, #{roleId, jdbcType=INTEGER}, #{groupMark, jdbcType=VARCHAR})
    </insert>
    <delete id="quitProject">
        delete from project_role_rt
        where proj_id = #{projId} and role_id = #{roleId}
    </delete>

</mapper>