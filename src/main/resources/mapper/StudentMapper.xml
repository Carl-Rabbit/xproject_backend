<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ooad.xproject.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.ooad.xproject.entity.Student" >
    <id column="std_id" property="stdId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="std_name" property="stdName" jdbcType="VARCHAR" />
    <result column="std_no" property="stdNo" jdbcType="CHAR" />
    <result column="std_class" property="stdClass" jdbcType="CHAR" />
    <result column="flags" property="flags" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    std_id, role_id, std_name, std_no, std_class, flags
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from students
    where std_id = #{stdId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from students
    where std_id = #{stdId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ooad.xproject.entity.Student" >
    <selectKey resultType="java.lang.Integer" keyProperty="stdId" order="AFTER" >
      Postgres
    </selectKey>
    insert into students (role_id, std_name, std_no, 
      std_class, flags)
    values (#{roleId,jdbcType=INTEGER}, #{stdName,jdbcType=VARCHAR}, #{stdNo,jdbcType=CHAR}, 
      #{stdClass,jdbcType=CHAR}, #{flags,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ooad.xproject.entity.Student"
          useGeneratedKeys="true" keyProperty="stdId" keyColumn="std_id">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="stdName != null" >
        std_name,
      </if>
      <if test="stdNo != null" >
        std_no,
      </if>
      <if test="stdClass != null" >
        std_class,
      </if>
      <if test="flags != null" >
        flags,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="stdName != null" >
        #{stdName,jdbcType=VARCHAR},
      </if>
      <if test="stdNo != null" >
        #{stdNo,jdbcType=CHAR},
      </if>
      <if test="stdClass != null" >
        #{stdClass,jdbcType=CHAR},
      </if>
      <if test="flags != null" >
        #{flags,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ooad.xproject.entity.Student" >
    update students
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="stdName != null" >
        std_name = #{stdName,jdbcType=VARCHAR},
      </if>
      <if test="stdNo != null" >
        std_no = #{stdNo,jdbcType=CHAR},
      </if>
      <if test="stdClass != null" >
        std_class = #{stdClass,jdbcType=CHAR},
      </if>
      <if test="flags != null" >
        flags = #{flags,jdbcType=VARCHAR},
      </if>
    </set>
    where std_id = #{stdId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ooad.xproject.entity.Student" >
    update students
    set role_id = #{roleId,jdbcType=INTEGER},
      std_name = #{stdName,jdbcType=VARCHAR},
      std_no = #{stdNo,jdbcType=CHAR},
      std_class = #{stdClass,jdbcType=CHAR},
      flags = #{flags,jdbcType=VARCHAR}
    where std_id = #{stdId,jdbcType=INTEGER}
  </update>
</mapper>